{"hash":"ef5a31b6d4f2ef30b559c2fd01d93591a31d3391","data":{"blog":{"title":"Django3+Python3_in_AWS_Lightsail.md","createdAt":"2020-05-01T09:07:31Z","description":"Commands to install python3, postgres, django3, gunicorn, nginx, cerbotSSL in AWS Lightsail VPS Ubuntu 18.04","address":"https://gist.github.com/c8eea6f494be8dee82810bf34a1a840a","content":"sudo apt-get update && sudo apt-get upgrade\n\nsudo apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx curl\n\nsudo -H pip3 install --upgrade pip\nsudo -H pip3 install virtualenv\n\nsudo -u postgres psql\n\nCREATE DATABASE myproject;  \nCREATE USER myprojectuser WITH PASSWORD 'password';  \nALTER ROLE myprojectuser SET client_encoding TO 'utf8';  \nALTER ROLE myprojectuser SET default_transaction_isolation TO 'read committed';  \nALTER ROLE myprojectuser SET timezone TO 'UTC';  \nGRANT ALL PRIVILEGES ON DATABASE myproject TO myprojectuser;  \n\\q\n\ngit clone Django-repo/HTTP/address \ncd project_directory  \nvirtualenv venv  \nsource venv/bin/activate  \npython -m pip install --upgrade pip\n\n(venv)$ pip install -r requirements.txt  \n//some settings with `settings.py`(STATIC_ROOT, postgres db setup, ALLOWED_HOTSTS), `.env` (SECZRET_KEY export) etc.  \n\n(venv)$ python manage.py migrate\n\n(venv)$ python manage.py collectstatic  \n//activate a port of 8000 under 'networking' tag in the control panel on Lightsail page.  \n(venv)$ python manage.py runserver 0.0.0.0:8000  \n\n(venv)$ gunicorn --bind 0.0.0.0:8000 myproject.wsgi\n\n(venv)$ deactivate\n\n\nsudo nano /etc/systemd/system/gunicorn.socket\n```\n# /etc/systemd/system/gunicorn.socket\n[Unit]\nDescription=gunicorn socket\n\n[Socket]\nListenStream=/run/gunicorn.sock\n\n[Install]\nWantedBy=sockets.target\n# save and close\n```\n\nsudo nano /etc/systemd/system/gunicorn.service\n```\n[Unit]\nDescription=gunicorn daemon\nRequires=gunicorn.socket\nAfter=network.target\n\n[Service]\nUser=sammy\nGroup=www-data\nWorkingDirectory=/home/sammy/myprojectdir\nExecStart=/home/sammy/myprojectdir/myprojectenv/bin/gunicorn \\\n          --access-logfile - \\\n          --workers 3 \\\n          --bind unix:/run/gunicorn.sock \\\n          myproject.wsgi:application\n\n[Install]\nWantedBy=multi-user.target\n\n# Note: User is the system user with writing privilege, so change that, also change 'WorkingDirectory' and 'ExecStart', DO NOT forget 'project_folder_contains_wsgi.wsgi:application'\n```\n\nsudo systemctl start gunicorn.socket\n\nsudo systemctl enable gunicorn.socket\n\n\nsudo nano /etc/nginx/sites-available/myproject\n```\nserver {\n    listen 80;\n    server_name server_domain_or_IP;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location /static/ {\n        root /home/sammy/myprojectdir;\n    }\n    location /media/ {\n        root /home/sammy/myprojectdir;\n    }\n    \n    location / {\n        include proxy_params;\n        proxy_pass http://unix:/run/gunicorn.sock;\n    }\n}\n\n# save and close the file\n```\n\nsudo ln -s /etc/nginx/sites-available/myproject /etc/nginx/sites-enabled\n\nsudo nginx -t\n\nsudo systemctl restart nginx\n\n\nsudo ufw allow 'Nginx Full'\n\nsudo ufw delete allow 'Nginx HTTP'\n\nufw allow OpenSSH\n\nufw enable\n\nufw status\n\n\n\nsudo apt install python-certbot-nginx\n\nsudo certbot --nginx -d example.com -d www.example.com\n\n"}},"context":{}}